// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Axios = require("axios");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function decodeAdvice(json) {
  return {
          id: Json_decode.field("slip_id", Json_decode.string, json),
          value: Json_decode.field("advice", Json_decode.string, json)
        };
}

function decodeSearchResult(json) {
  return {
          total_results: Caml_format.caml_int_of_string(Json_decode.field("total_results", Json_decode.string, json)),
          items: Json_decode.field("slips", (function (param) {
                  return Json_decode.array(decodeAdvice, param);
                }), json)
        };
}

function decodeRandomResponse(json) {
  return {
          item: Json_decode.field("slip", decodeAdvice, json)
        };
}

function decodeMessage(json) {
  return {
          type_: Json_decode.at({
                  hd: "message",
                  tl: {
                    hd: "type",
                    tl: /* [] */0
                  }
                }, Json_decode.string)(json)
        };
}

function messageToResponse(message) {
  var match = message.type_;
  if (match === "notice") {
    return {
            TAG: /* Ok */0,
            _0: {
              total_results: 0,
              items: []
            }
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: undefined
          };
  }
}

var apiBaseUrl = "https://api.adviceslip.com/advice";

function searchAdvice(query) {
  return Axios.get(apiBaseUrl + ("/search/" + query)).then(function (response) {
                var searchResult;
                try {
                  searchResult = decodeSearchResult(response.data);
                }
                catch (exn){
                  var exit = 0;
                  var message;
                  try {
                    message = decodeMessage(response.data);
                    exit = 2;
                  }
                  catch (exn$1){
                    return Promise.resolve({
                                TAG: /* Error */1,
                                _0: undefined
                              });
                  }
                  if (exit === 2) {
                    return Promise.resolve(messageToResponse(message));
                  }
                  
                }
                return Promise.resolve({
                            TAG: /* Ok */0,
                            _0: searchResult
                          });
              }).catch(function (param) {
              return Promise.resolve({
                          TAG: /* Error */1,
                          _0: undefined
                        });
            });
}

function fetchRandomAdvice(param) {
  return Axios.get(apiBaseUrl).then(function (response) {
                return Promise.resolve({
                            TAG: /* Ok */0,
                            _0: decodeRandomResponse(response.data)
                          });
              }).catch(function (param) {
              return Promise.resolve({
                          TAG: /* Error */1,
                          _0: undefined
                        });
            });
}

exports.decodeAdvice = decodeAdvice;
exports.decodeSearchResult = decodeSearchResult;
exports.decodeRandomResponse = decodeRandomResponse;
exports.decodeMessage = decodeMessage;
exports.messageToResponse = messageToResponse;
exports.apiBaseUrl = apiBaseUrl;
exports.searchAdvice = searchAdvice;
exports.fetchRandomAdvice = fetchRandomAdvice;
/* axios Not a pure module */
